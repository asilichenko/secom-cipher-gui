/*
 * Copyright (c) 2023 Oleksii Sylichenko.
 *
 * Licensed under the LGPL, Version 3.0 or later (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.gnu.org/licenses/lgpl-3.0.en.html
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package ua.in.asilichenko.secom.gui.main;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.util.Locale;

/**
 * Base GUI class with code generated by IntelliJ Idea
 *
 * @author Oleksii Sylichenko (a.silichenko@gmail.com)
 * Creation date: 03.02.2023
 */
public abstract class FormMain extends JFrame {

    protected JPanel contentPane;

    protected JTextArea textArea;
    protected JTextField keyPhraseTF;

    protected JButton encipherBtn;
    protected JButton decipherBtn;

    protected JButton clearBtn;
    protected JButton pasteBtn;
    protected JButton copyBtn;

    protected JButton helpBtn;
    protected JButton aboutBtn;

    protected JLabel statusLbl;

    public FormMain() throws HeadlessException {
        setContentPane(contentPane);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new BorderLayout(-1, -1));
        contentPane.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(8, 8));
        contentPane.add(panel1, BorderLayout.CENTER);
        panel1.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(0, 8, 8, 8), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        final JScrollPane scrollPane1 = new JScrollPane();
        scrollPane1.setVerticalScrollBarPolicy(22);
        panel1.add(scrollPane1, BorderLayout.CENTER);
        textArea = new JTextArea();
        Font textAreaFont = this.$$$getFont$$$("Courier New", -1, 16, textArea.getFont());
        if (textAreaFont != null) textArea.setFont(textAreaFont);
        textArea.setLineWrap(true);
        textArea.setWrapStyleWord(true);
        scrollPane1.setViewportView(textArea);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(2, 1, new Insets(8, 0, 0, 0), -1, -1));
        panel1.add(panel2, BorderLayout.NORTH);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new GridLayoutManager(1, 2, new Insets(8, 8, 8, 8), -1, -1));
        panel2.add(panel3, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        panel3.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(-4473925)), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        final JLabel label1 = new JLabel();
        label1.setHorizontalAlignment(2);
        label1.setHorizontalTextPosition(4);
        label1.setText("Key phrase:");
        panel3.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        keyPhraseTF = new JTextField();
        Font keyPhraseTFFont = this.$$$getFont$$$("Courier New", -1, 16, keyPhraseTF.getFont());
        if (keyPhraseTFFont != null) keyPhraseTF.setFont(keyPhraseTFFont);
        keyPhraseTF.setHorizontalAlignment(2);
        panel3.add(keyPhraseTF, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new FlowLayout(FlowLayout.CENTER, 0, 5));
        panel2.add(panel4, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_VERTICAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        encipherBtn = new JButton();
        encipherBtn.setText("Encipher");
        panel4.add(encipherBtn);
        final JToolBar.Separator toolBar$Separator1 = new JToolBar.Separator();
        panel4.add(toolBar$Separator1);
        decipherBtn = new JButton();
        decipherBtn.setText("Decipher");
        panel4.add(decipherBtn);
        final JToolBar.Separator toolBar$Separator2 = new JToolBar.Separator();
        panel4.add(toolBar$Separator2);
        clearBtn = new JButton();
        clearBtn.setText("Clear");
        panel4.add(clearBtn);
        final JToolBar.Separator toolBar$Separator3 = new JToolBar.Separator();
        panel4.add(toolBar$Separator3);
        pasteBtn = new JButton();
        pasteBtn.setText("Paste");
        panel4.add(pasteBtn);
        final JToolBar.Separator toolBar$Separator4 = new JToolBar.Separator();
        panel4.add(toolBar$Separator4);
        copyBtn = new JButton();
        copyBtn.setText("Copy");
        panel4.add(copyBtn);
        final JToolBar.Separator toolBar$Separator5 = new JToolBar.Separator();
        panel4.add(toolBar$Separator5);
        helpBtn = new JButton();
        helpBtn.setText("Help");
        panel4.add(helpBtn);
        final JToolBar.Separator toolBar$Separator6 = new JToolBar.Separator();
        panel4.add(toolBar$Separator6);
        aboutBtn = new JButton();
        aboutBtn.setText("About");
        panel4.add(aboutBtn);
        statusLbl = new JLabel();
        statusLbl.setHorizontalAlignment(4);
        statusLbl.setText("0 Chars");
        panel1.add(statusLbl, BorderLayout.SOUTH);
        label1.setLabelFor(keyPhraseTF);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }

}
